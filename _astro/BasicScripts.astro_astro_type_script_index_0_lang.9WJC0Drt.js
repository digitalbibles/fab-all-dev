import{getCurrentLocale as y,getByPath as p}from"./translationHelper.hzVhlbSt.js";const l=new Map;async function g(t){if(l.has(t))return l.get(t);try{const e=await fetch(`/content-bundles/${t}.json`);if(!e.ok)throw new Error(`Failed to load content bundle for ${t}`);const r=await e.json();return l.set(t,r),r}catch(e){return console.warn(`Could not load content for locale ${t}, falling back to English`,e),t!=="en"?g("en"):{}}}async function i(){const t=y(),e=await g(t);document.querySelectorAll("[data-content]").forEach(async o=>{const r=o.dataset.content,c=e[r]||"";c&&(o.innerHTML=c)})}function _(){l.clear()}typeof window<"u"&&(window.addEventListener("locale-changed",()=>{_(),i()}),document.addEventListener("DOMContentLoaded",i),document.addEventListener("astro:after-swap",i));let m={};async function h(t){if(m[t])return m[t];try{const e=await fetch(`/i18n/${t}.json`);if(!e.ok){if(console.warn(`Failed to fetch translations for ${t}, status: ${e.status}`),t!=="en")return await h("en");throw new Error(`HTTP ${e.status}`)}const o=await e.json();return m[t]=o,o}catch(e){if(console.error(`Failed to load translations for locale: ${t}`,e),t!=="en")try{return await h("en")}catch(o){console.error("English fallback also failed:",o)}return{}}}const d=async()=>{const t=y(),e=await h(t),o=e.locale_direction||(t==="ar"?"rtl":"ltr");document.documentElement.dir=o,document.documentElement.lang=t;const r=new Intl.NumberFormat(e.translate_numeral||t),c=document.querySelectorAll("[data-t]");document.querySelectorAll("[data-t-placeholder]").forEach(a=>{const s=a.dataset.tPlaceholder,n=p(e,s);n!=null&&n!==!1&&(a.placeholder=String(n))}),c.forEach(a=>{const s=a.dataset.t;let n=p(e,s);if(n!=null&&n!==!1){if(typeof n=="string"){const b=/\{([^}]+)\}|(\w+_count|\w+_total|\w+_number)/g;n=n.replace(b,(C,L,$)=>{const w=L||$,u=w.replace(/_([a-z])/g,(f,P)=>P.toUpperCase());if(a.dataset[u]){if(w.match(/_count$|_total$|_number$/)){const f=parseInt(a.dataset[u],10);if(!isNaN(f))return r.format(f)}return a.dataset[u]}return C})}a.textContent=String(n)}}),document.querySelectorAll("[data-format-number]").forEach(a=>{const s=a.textContent?.trim();if(s){const n=parseInt(s.replace(/[^0-9]/g,""),10);isNaN(n)||(a.textContent=r.format(n))}}),await i()};function E(){new URLSearchParams(window.location.search).get("locale")&&d()}document.addEventListener("DOMContentLoaded",()=>{E(),d()});document.addEventListener("astro:after-swap",()=>{E(),d()});window.addEventListener("locale-changed",d);export{d as a};
